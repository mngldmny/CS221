# -*- coding: utf-8 -*-
"""LinearRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Sr9qy6ANd013GANh4hppbO45rml1JuIS
"""

import numpy as np

trainExamples =[ (1,1),
                (2,3),
                 (4,3)]

def phi(x):
  return np.array([1,x])

def initWeightVector():
  return np.zeros(2)

def trainLoss(w):
  return (1.0/len(trainExamples)) * (sum((w.dot(phi(x))-y)**2 for x, y in trainExamples))

def gradientTrainLoss(w):
  return (1.0/len(trainExamples)) * (sum(2*(w.dot(phi(x))-y)*phi(x) for x,y in trainExamples))

def gradientDescent(F, gradientF, initWeightVector):
  w=initWeightVector()
  eta=0.1
  for t in range(500):
    value= F(w)
    gradient = gradientF(w)
    w = w - eta * gradient
    print(f'epoch {t}: w = {w}, F(w) = {value}, gradientF = {gradient}')

gradientDescent(trainLoss, gradientTrainLoss, initWeightVector)